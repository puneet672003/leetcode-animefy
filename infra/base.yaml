# base.yaml
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  RepoName:
    Type: String

Resources:
  # DynamoDB Table - Guilds
  GuildsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Guilds
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: guild_id
          AttributeType: S
      KeySchema:
        - AttributeName: guild_id
          KeyType: HASH

  # ECR Repo
  EcrRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref RepoName
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${RepoName}-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

  LambdaLogsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: lambda-logs-policy
      Roles: [!Ref LambdaExecutionRole]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"

  LambdaDynamoDBPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: lambda-dynamodb-policy
      Roles: [!Ref LambdaExecutionRole]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "dynamodb:*"
            Resource: "*"

Outputs:
  LambdaExecutionRoleArn:
    Value: !GetAtt LambdaExecutionRole.Arn
    Description: ARN of Lambda Execution Role